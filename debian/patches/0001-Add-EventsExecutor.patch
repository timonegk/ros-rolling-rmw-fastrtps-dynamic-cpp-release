From: Timon Engelke <timon.engelke@online.de>
Date: Thu, 9 Jun 2022 13:14:25 +0200
Subject: Add EventsExecutor

---
 src/rmw_client.cpp       | 14 ++++++++++++++
 src/rmw_event.cpp        | 14 ++++++++++++++
 src/rmw_service.cpp      | 14 ++++++++++++++
 src/rmw_subscription.cpp | 14 ++++++++++++++
 4 files changed, 56 insertions(+)

diff --git a/src/rmw_client.cpp b/src/rmw_client.cpp
index 765e0df..e759cd0 100644
--- a/src/rmw_client.cpp
+++ b/src/rmw_client.cpp
@@ -577,4 +577,18 @@ rmw_client_response_subscription_get_actual_qos(
 
   return rmw_fastrtps_shared_cpp::__rmw_client_response_subscription_get_actual_qos(client, qos);
 }
+
+rmw_ret_t
+rmw_client_set_on_new_response_callback(
+  rmw_client_t * rmw_client,
+  rmw_event_callback_t callback,
+  const void * user_data)
+{
+  RMW_CHECK_ARGUMENT_FOR_NULL(rmw_client, RMW_RET_INVALID_ARGUMENT);
+
+  return rmw_fastrtps_shared_cpp::__rmw_client_set_on_new_response_callback(
+    rmw_client,
+    callback,
+    user_data);
+}
 }  // extern "C"
diff --git a/src/rmw_event.cpp b/src/rmw_event.cpp
index c4b5a72..1316357 100644
--- a/src/rmw_event.cpp
+++ b/src/rmw_event.cpp
@@ -47,4 +47,18 @@ rmw_subscription_event_init(
     subscription->data,
     event_type);
 }
+
+rmw_ret_t
+rmw_event_set_callback(
+  rmw_event_t * rmw_event,
+  rmw_event_callback_t callback,
+  const void * user_data)
+{
+  RMW_CHECK_ARGUMENT_FOR_NULL(rmw_event, RMW_RET_INVALID_ARGUMENT);
+
+  return rmw_fastrtps_shared_cpp::__rmw_event_set_callback(
+    rmw_event,
+    callback,
+    user_data);
+}
 }  // extern "C"
diff --git a/src/rmw_service.cpp b/src/rmw_service.cpp
index edb9d1a..1d0fce7 100644
--- a/src/rmw_service.cpp
+++ b/src/rmw_service.cpp
@@ -576,4 +576,18 @@ rmw_service_request_subscription_get_actual_qos(
 
   return rmw_fastrtps_shared_cpp::__rmw_service_request_subscription_get_actual_qos(service, qos);
 }
+
+rmw_ret_t
+rmw_service_set_on_new_request_callback(
+  rmw_service_t * rmw_service,
+  rmw_event_callback_t callback,
+  const void * user_data)
+{
+  RMW_CHECK_ARGUMENT_FOR_NULL(rmw_service, RMW_RET_INVALID_ARGUMENT);
+
+  return rmw_fastrtps_shared_cpp::__rmw_service_set_on_new_request_callback(
+    rmw_service,
+    callback,
+    user_data);
+}
 }  // extern "C"
diff --git a/src/rmw_subscription.cpp b/src/rmw_subscription.cpp
index 1fe1780..5a9933a 100644
--- a/src/rmw_subscription.cpp
+++ b/src/rmw_subscription.cpp
@@ -221,4 +221,18 @@ rmw_destroy_subscription(rmw_node_t * node, rmw_subscription_t * subscription)
   return rmw_fastrtps_shared_cpp::__rmw_destroy_subscription(
     eprosima_fastrtps_identifier, node, subscription);
 }
+
+rmw_ret_t
+rmw_subscription_set_on_new_message_callback(
+  rmw_subscription_t * rmw_subscription,
+  rmw_event_callback_t callback,
+  const void * user_data)
+{
+  RMW_CHECK_ARGUMENT_FOR_NULL(rmw_subscription, RMW_RET_INVALID_ARGUMENT);
+
+  return rmw_fastrtps_shared_cpp::__rmw_subscription_set_on_new_message_callback(
+    rmw_subscription,
+    callback,
+    user_data);
+}
 }  // extern "C"
